<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="wms-mms-inv-hold-test-suite.xml" />
	<munit:test name="wms-mms-inv-hold-test-suite-Inbound_InvHold_FlowTest" doc:id="75940d93-af73-4c9c-9870-50338038384e" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="46f3caaa-1651-4a88-9f1b-3abf36d33988" >
				<munit:payload value='#[%dw 2.0
output application/xml
---
readUrl("classpath://Inbound/InvHld/INV_HLD2113.xml","application/xml") ]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Store XML data to Message Store" doc:id="4d690b3f-c00f-4d54-81ad-8674479785d7" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Store XML to Message Store" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Out_FileName" doc:id="f52eeae4-7dae-4597-9cf7-66f7ddf43623" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="433dd867-16e6-4be5-b306-5b3099837bfd" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="Out_FileName" value="#['INVHOLD_INVRCPT_20210204100528645_Detail.csv']" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Trg_FileName" doc:id="3d597514-66e5-4570-b17a-3cec1751f8f3" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="17e27c91-a302-4e72-808f-4101ba9f963f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="Trg_FileName" value="#['INVHOLD_INVRCPT_20210204100528645_Detail.trg']" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Store Header CSV to Message Store" doc:id="7c745bff-fab5-49ea-b008-50a82d783b05" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Store Header CSV to Message Store" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Write Header CSV to MMS Adapter Outbound Folder" doc:id="6be05d93-4c9a-4c41-aa41-d367f7f501df" processor="file:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Write Header CSV to MMS Adapter Outbound Folder" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="2cae9026-912e-46e1-83f3-4a75a128173b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Write trigger file for Header" doc:id="bf0f7734-0637-4a7f-9409-fc4ed3876f39" processor="file:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Write trigger file for Header" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to Inbound_InvHold_Flow" doc:id="0fb8a2e7-076a-49f2-8517-b2fcabdee7fd" name="Inbound_InvHold_Flow"/>
		</munit:execution>
	</munit:test>


</mule>
